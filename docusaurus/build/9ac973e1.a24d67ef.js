(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{118:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),o=t(6),c=(t(0),t(156)),a={title:"<Checkbox />",summary:"Inputs of type checkbox. Checkboxes should be wrapped in a CheckboxGroup."},i={unversionedId:"form/components/checkbox",id:"form/components/checkbox",isDocsHomePage:!1,title:"<Checkbox />",description:"Example",source:"@site/docs/form/components/checkbox.md",slug:"/form/components/checkbox",permalink:"/form/components/checkbox",editUrl:"https://github.com/avaiity/availity-react/edit/master/docs/form/components/checkbox.md",version:"current",sidebar:"someSidebar",previous:{title:"<CheckboxGroup />",permalink:"/form/components/checkbox-group"},next:{title:"<Feedback />",permalink:"/form/components/feedback"}},l=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[{value:"<code>id?: string</code>",id:"id-string",children:[]},{value:"<code>label?: ReactNode</code>",id:"label-reactnode",children:[]},{value:"<code>value?: string</code>",id:"value-string",children:[]},{value:"<code>disabled?: boolean</code>",id:"disabled-boolean",children:[]},{value:"<code>inline?: boolean</code>",id:"inline-boolean",children:[]}]}],b={rightToc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"viewCode=true",viewCode:"true"}),'<Form\n  initialValues={{\n    hello: [],\n  }}\n  onSubmit={() => {}}\n  validationSchema={yup.object().shape({\n    hello: yup.array().required(\'At least one checkbox is required\'),\n  })}\n>\n  <CheckboxGroup name="hello" label="Checkbox Group">\n    <Checkbox label="Check One" value="uno" />\n    <Checkbox label="Check Two" value="dos" />\n    <Checkbox label="Check Three" value="tres" />\n  </CheckboxGroup>\n  <Button type="submit" color="primary">\n    Submit\n  </Button>\n</Form>\n')),Object(c.b)("h2",{id:"props"},"Props"),Object(c.b)("h3",{id:"id-string"},Object(c.b)("inlineCode",{parentName:"h3"},"id?: string")),Object(c.b)("p",null,"Should match ",Object(c.b)("inlineCode",{parentName:"p"},"<CheckboxGroup />")," name for validation."),Object(c.b)("h3",{id:"label-reactnode"},Object(c.b)("inlineCode",{parentName:"h3"},"label?: ReactNode")),Object(c.b)("p",null,"Label for the checkbox."),Object(c.b)("h3",{id:"value-string"},Object(c.b)("inlineCode",{parentName:"h3"},"value?: string")),Object(c.b)("p",null,"Value of the checkbox."),Object(c.b)("h3",{id:"disabled-boolean"},Object(c.b)("inlineCode",{parentName:"h3"},"disabled?: boolean")),Object(c.b)("p",null,"Disables the checkbox."),Object(c.b)("h3",{id:"inline-boolean"},Object(c.b)("inlineCode",{parentName:"h3"},"inline?: boolean")),Object(c.b)("p",null,"Will render the checkbox inline with other checkboxes. ",Object(c.b)("strong",{parentName:"p"},"Default:")," true."))}p.isMDXComponent=!0},156:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var b=o.a.createContext({}),p=function(e){var n=o.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return o.a.createElement(b.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=p(t),s=r,m=u["".concat(a,".").concat(s)]||u[s]||d[s]||c;return t?o.a.createElement(m,i(i({ref:n},b),{},{components:t})):o.a.createElement(m,i({ref:n},b))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,a=new Array(c);a[0]=s;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var b=2;b<c;b++)a[b]=t[b];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);