(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{107:function(e,o,r){"use strict";r.r(o),r.d(o,"frontMatter",(function(){return i})),r.d(o,"metadata",(function(){return p})),r.d(o,"rightToc",(function(){return l})),r.d(o,"default",(function(){return d}));var t=r(2),n=r(6),a=(r(0),r(156)),i={title:"<UploadProgressBar />",summary:"The raw progress bar to be used when making your own."},p={unversionedId:"form/upload/upload-progress-bar",id:"form/upload/upload-progress-bar",isDocsHomePage:!1,title:"<UploadProgressBar />",description:"Example",source:"@site/docs/form/upload/upload-progress-bar.md",slug:"/form/upload/upload-progress-bar",permalink:"/form/upload/upload-progress-bar",editUrl:"https://github.com/avaiity/availity-react/edit/master/docs/form/upload/upload-progress-bar.md",version:"current",sidebar:"someSidebar",previous:{title:"<FilePickerBtn />",permalink:"/form/upload/file-picker-btn"},next:{title:"Getting Started",permalink:"/components/analytics/index"}},l=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[{value:"<code>upload?: UploadCore</code>",id:"upload-uploadcore",children:[]},{value:"<code>onProgress?: (upload: UploadCore) =&gt; void</code>",id:"onprogress-upload-uploadcore--void",children:[]},{value:"<code>onSuccess?: (upload: UploadCore) =&gt; void</code>",id:"onsuccess-upload-uploadcore--void",children:[]},{value:"<code>onError?: (upload: UploadCore) =&gt; void</code>",id:"onerror-upload-uploadcore--void",children:[]},{value:"<code>complete?: boolean</code>",id:"complete-boolean",children:[]},{value:"<code>striped?: boolean</code>",id:"striped-boolean",children:[]},{value:"<code>animated?: boolean</code>",id:"animated-boolean",children:[]},{value:"<code>color?: string</code>",id:"color-string",children:[]}]}],c={rightToc:l};function d(e){var o=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},c,r,{components:o,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { UploadProgressBar } from '@availity/form-upload';\n\n<UploadProgressBar upload={uploadInstance} animated />\n")),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"upload-uploadcore"},Object(a.b)("inlineCode",{parentName:"h3"},"upload?: UploadCore")),Object(a.b)("p",null,"The upload instance returned by creating a ",Object(a.b)("inlineCode",{parentName:"p"},"new Upload")," via ",Object(a.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/Availity/sdk-js/tree/master/packages/upload-core"}),"upload-core"),"."),Object(a.b)("h3",{id:"onprogress-upload-uploadcore--void"},Object(a.b)("inlineCode",{parentName:"h3"},"onProgress?: (upload: UploadCore) => void")),Object(a.b)("p",null,"Callback function to hook into the ",Object(a.b)("inlineCode",{parentName:"p"},"onProgress")," within the Upload instance provided in the ",Object(a.b)("inlineCode",{parentName:"p"},"upload")," prop."),Object(a.b)("h3",{id:"onsuccess-upload-uploadcore--void"},Object(a.b)("inlineCode",{parentName:"h3"},"onSuccess?: (upload: UploadCore) => void")),Object(a.b)("p",null,"Callback function to hook into the ",Object(a.b)("inlineCode",{parentName:"p"},"onSuccess")," within the Upload instance provided in the ",Object(a.b)("inlineCode",{parentName:"p"},"upload")," prop."),Object(a.b)("h3",{id:"onerror-upload-uploadcore--void"},Object(a.b)("inlineCode",{parentName:"h3"},"onError?: (upload: UploadCore) => void")),Object(a.b)("p",null,"Callback function to hook into the ",Object(a.b)("inlineCode",{parentName:"p"},"onError")," within the Upload instance provided in the ",Object(a.b)("inlineCode",{parentName:"p"},"upload")," prop."),Object(a.b)("h3",{id:"complete-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"complete?: boolean")),Object(a.b)("p",null,'Triggers the "complete" style in the progress bar. When true, a checkmark appears at the end of the progress bar.'),Object(a.b)("h3",{id:"striped-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"striped?: boolean")),Object(a.b)("p",null,'Triggers the "striped" style in the progress bar.'),Object(a.b)("h3",{id:"animated-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"animated?: boolean")),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"true")," the progress bar has animated stripes while uploading is in progress."),Object(a.b)("h3",{id:"color-string"},Object(a.b)("inlineCode",{parentName:"h3"},"color?: string")),Object(a.b)("p",null,"Color of the progress bar. ",Object(a.b)("strong",{parentName:"p"},"Default:")," ",Object(a.b)("inlineCode",{parentName:"p"},"success")))}d.isMDXComponent=!0},156:function(e,o,r){"use strict";r.d(o,"a",(function(){return u})),r.d(o,"b",(function(){return m}));var t=r(0),n=r.n(t);function a(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function i(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?i(Object(r),!0).forEach((function(o){a(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function l(e,o){if(null==e)return{};var r,t,n=function(e,o){if(null==e)return{};var r,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),d=function(e){var o=n.a.useContext(c),r=o;return e&&(r="function"==typeof e?e(o):p(p({},o),e)),r},u=function(e){var o=d(e.components);return n.a.createElement(c.Provider,{value:o},e.children)},s={inlineCode:"code",wrapper:function(e){var o=e.children;return n.a.createElement(n.a.Fragment,{},o)}},b=n.a.forwardRef((function(e,o){var r=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(r),b=t,m=u["".concat(i,".").concat(b)]||u[b]||s[b]||a;return r?n.a.createElement(m,p(p({ref:o},c),{},{components:r})):n.a.createElement(m,p({ref:o},c))}));function m(e,o){var r=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var a=r.length,i=new Array(a);i[0]=b;var p={};for(var l in o)hasOwnProperty.call(o,l)&&(p[l]=o[l]);p.originalType=e,p.mdxType="string"==typeof e?e:t,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);