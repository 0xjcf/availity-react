(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{156:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=o.a.createContext({}),u=function(e){var n=o.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(d.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=u(t),s=r,m=p["".concat(i,".").concat(s)]||p[s]||b[s]||a;return t?o.a.createElement(m,l(l({ref:n},d),{},{components:t})):o.a.createElement(m,l({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),o=t(6),a=(t(0),t(156)),i={title:"<Radio />",summary:"Inputs of type radio. Radios should be wrapped in a RadioGroup."},l={unversionedId:"form/components/radio",id:"form/components/radio",isDocsHomePage:!1,title:"<Radio />",description:"Example",source:"@site/docs/form/components/radio.md",slug:"/form/components/radio",permalink:"/form/components/radio",editUrl:"https://github.com/avaiity/availity-react/edit/master/docs/form/components/radio.md",version:"current",sidebar:"someSidebar",previous:{title:"<RadioGroup />",permalink:"/form/components/radio-group"},next:{title:"Getting Started",permalink:"/form/date/index"}},c=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[{value:"<code>id?: string</code>",id:"id-string",children:[]},{value:"<code>label?: ReactNode</code>",id:"label-reactnode",children:[]},{value:"<code>value?: string</code>",id:"value-string",children:[]},{value:"<code>disabled?: boolean</code>",id:"disabled-boolean",children:[]},{value:"<code>inline?: boolean</code>",id:"inline-boolean",children:[]}]}],d={rightToc:c};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"viewCode=true",viewCode:"true"}),'<Form\n  initialValues={{\n    hello: \'\',\n  }}\n  onSubmit={() => {}}\n  validationSchema={yup.object().shape({\n    hello: yup.string().required(\'This field is required\'),\n  })}\n>\n  <RadioGroup name="hello" label="Radio Group">\n    <Radio label="Radio One" value="uno" />\n    <Radio label="Radio Two" value="dos" />\n    <Radio label="Radio Three" value="tres" />\n  </RadioGroup>\n  <Button type="submit">Submit</Button>\n</Form>\n')),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"id-string"},Object(a.b)("inlineCode",{parentName:"h3"},"id?: string")),Object(a.b)("p",null,"Should match ",Object(a.b)("inlineCode",{parentName:"p"},"<RadioGroup />")," name for validation."),Object(a.b)("h3",{id:"label-reactnode"},Object(a.b)("inlineCode",{parentName:"h3"},"label?: ReactNode")),Object(a.b)("p",null,"Label for the checkbox."),Object(a.b)("h3",{id:"value-string"},Object(a.b)("inlineCode",{parentName:"h3"},"value?: string")),Object(a.b)("p",null,"Value of the checkbox."),Object(a.b)("h3",{id:"disabled-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"disabled?: boolean")),Object(a.b)("p",null,"Disables the checkbox."),Object(a.b)("h3",{id:"inline-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"inline?: boolean")),Object(a.b)("p",null,"Will render the checkbox inline with other checkboxes."))}u.isMDXComponent=!0}}]);