(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{156:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),l=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,b=d(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,u=p["".concat(i,".").concat(m)]||p[m]||s[m]||a;return n?o.a.createElement(u,c(c({ref:t},b),{},{components:n})):o.a.createElement(u,c({ref:t},b))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var b=2;b<a;b++)i[b]=n[b];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(156)),i={title:"<FeedbackForm />"},c={unversionedId:"components/feedback/form",id:"components/feedback/form",isDocsHomePage:!1,title:"<FeedbackForm />",description:"This is the underlying form, which is exposed in case you need to gather feedback inline.",source:"@site/docs/components/feedback/form.md",slug:"/components/feedback/form",permalink:"/components/feedback/form",editUrl:"https://github.com/avaiity/availity-react/edit/master/docs/components/feedback/form.md",version:"current",sidebar:"someSidebar",previous:{title:"<Feedback /> ( Default Export )",permalink:"/components/feedback/feedback"},next:{title:"useCurrentUser",permalink:"/components/hooks/use-current-user"}},d=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[{value:"<code>name?: string</code>",id:"name-string",children:[]},{value:"<code>onFeedbackSent?: (feedback: FeedbackObject) =&gt; void</code>",id:"onfeedbacksent-feedback-feedbackobject--void",children:[]},{value:"<code>faceOptions?: Array&lt;Object&gt;</code>",id:"faceoptions-arrayobject",children:[]},{value:"<code>aboutOptions?: Array&lt;Object&gt;</code>",id:"aboutoptions-arrayobject",children:[]},{value:"<code>onClose?: () =&gt; void</code>",id:"onclose---void",children:[]},{value:"<code>prompt?: string</code>",id:"prompt-string",children:[]},{value:"<code>additionalComments?: boolean</code>",id:"additionalcomments-boolean",children:[]},{value:"<code>staticFields?: object</code>",id:"staticfields-object",children:[]},{value:"<code>modalHeaderProps?: ModalHeaderProps</code>",id:"modalheaderprops-modalheaderprops",children:[]},{value:"<code>...rest</code>",id:"rest",children:[]}]}],b={rightToc:d};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This is the underlying form, which is exposed in case you need to gather feedback inline."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"viewCode=true",viewCode:"true"}),'import { FeedbackForm } from \'@availity/feedback\';\n\n<div className="w-100">\n  <FeedbackForm name="Payer Space" />\n</div>;\n')),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"name-string"},Object(a.b)("inlineCode",{parentName:"h3"},"name?: string")),Object(a.b)("p",null,"The name of the application this feedback is for. It is used in the API request to indicate where the feedback came from."),Object(a.b)("h3",{id:"onfeedbacksent-feedback-feedbackobject--void"},Object(a.b)("inlineCode",{parentName:"h3"},"onFeedbackSent?: (feedback: FeedbackObject) => void")),Object(a.b)("p",null,"Callback for when the feedback is submitted. It is called with the feedback object."),Object(a.b)("h3",{id:"faceoptions-arrayobject"},Object(a.b)("inlineCode",{parentName:"h3"},"faceOptions?: Array<Object>")),Object(a.b)("p",null,"Array of Objects containing ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"icon"))," (String), ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"description"))," (String), and ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"placeholder"))," (String) properties. Allows you to override the smiley face options which appear. Default: Smiley Face, Meh Face, and Frowny Face."),Object(a.b)("h3",{id:"aboutoptions-arrayobject"},Object(a.b)("inlineCode",{parentName:"h3"},"aboutOptions?: Array<Object>")),Object(a.b)("p",null,"Array of Objects containing ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"value"))," (String,Number) and ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"label"))," (String) properties. Allows a dropdown displaying the options provided to let the user indicate what the feedback is about."),Object(a.b)("h3",{id:"onclose---void"},Object(a.b)("inlineCode",{parentName:"h3"},"onClose?: () => void")),Object(a.b)("p",null,'When provided, a "Close" button is rendered and ',Object(a.b)("inlineCode",{parentName:"p"},"onClose")," is excuted when it's clicked."),Object(a.b)("h3",{id:"prompt-string"},Object(a.b)("inlineCode",{parentName:"h3"},"prompt?: string")),Object(a.b)("p",null,"Text that prompts the user to provider feedback. ",Object(a.b)("strong",{parentName:"p"},"Default:")," ",Object(a.b)("inlineCode",{parentName:"p"},'"Tell us what you think about ${appName}."'),"."),Object(a.b)("h3",{id:"additionalcomments-boolean"},Object(a.b)("inlineCode",{parentName:"h3"},"additionalComments?: boolean")),Object(a.b)("p",null,"If ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", shows an optional comments field below."),Object(a.b)("h3",{id:"staticfields-object"},Object(a.b)("inlineCode",{parentName:"h3"},"staticFields?: object")),Object(a.b)("p",null,"Static (non-user-entered) key/value pairs to be sent in feedback submission."),Object(a.b)("h3",{id:"modalheaderprops-modalheaderprops"},Object(a.b)("inlineCode",{parentName:"h3"},"modalHeaderProps?: ModalHeaderProps")),Object(a.b)("p",null,"Props to be spread onto the ",Object(a.b)("inlineCode",{parentName:"p"},"<ModalHeader />")," rendered inside of the ",Object(a.b)("inlineCode",{parentName:"p"},"<FeedbackForm />"),". See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/reactstrap/reactstrap/blob/master/src/ModalHeader.js"}),"ModalHeader")),Object(a.b)("h3",{id:"rest"},Object(a.b)("inlineCode",{parentName:"h3"},"...rest")),Object(a.b)("p",null,"View full set of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://availity.github.io/availity-react/form/components/form/"}),"Form Props")))}l.isMDXComponent=!0}}]);